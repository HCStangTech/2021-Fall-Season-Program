#pragma config(Motor,  port2,           leftMotor,     tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           rightMotor,    tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port4,           magicServo,    tmotorServoStandard, openLoop)
#pragma config(Motor,  port7,           servo,         tmotorServoStandard, openLoop)
#pragma config(Motor,  port8,           scoopMotor,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,           armMotor,      tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void drive(int leftSpeed, int rightSpeed, int time)
	{
		int countingTime = 0;
		while(countingTime != time)
		{
			if(!vexRT[Btn6D])
			{
				motor[leftMotor] = leftSpeed;
				motor[rightMotor] = rightSpeed;

				delay(1);
				countingTime ++;
			}

			else
				countingTime = time;
		}

		motor[leftMotor] = 0;
		motor[rightMotor] = 0;

	}

task main()
{
	int threshold = 10;

	float speedMod = 1;

	motor[servo] = 127;

	bool armLocked = false;

	motor[magicServo] = 50;

	while(true)
	{
		//Movement for the right motor
		if(abs(vexRT[Ch2]) >= threshold)
			motor[rightMotor] = vexRT[Ch2] * speedMod;
		else
			motor[rightMotor] = 0;

		//movement for the left motor
		if(abs(vexRT[Ch3]) >= threshold)
			motor[leftMotor] = vexRT[Ch3] * speedMod;
		else
			motor[leftMotor] = 0;


		//Basic servo movement
		if(vexRT[Btn8U])
			motor[servo] = 127;

		if(vexRT[Btn8D])
			motor[servo] = 0;


		//Movement for arm to go up and down
		if(vexRT[Btn7U])
			motor[armMotor] = 110 * speedMod;
		else if(vexRT[Btn7D])
			motor[armMotor] = -50 * speedMod;
		else if(armLocked)
			motor[armMotor] = 30;
		else
			motor[armMotor] = 0;

			//Motor Locking Control
			if(vexRT[Btn5U])
				armLocked = true;
			if(vexRT[Btn5D])
				armLocked = false;

		//Basic movement for scooper tilting
		if(vexRT[Btn7L])
			motor[scoopMotor] = 50 * speedMod;
		else if(vexRT[Btn7R])
			motor[scoopMotor] = -30 * speedMod;
		else
			motor[scoopMotor] = 0;

		//Autonomous
		if(vexRT[Btn6U])
		{
			//Raise arm so it dosent catch on the tape
			motor[armMotor] = 70;
			delay(500);
			motor[armMotor] = 0;

			//First advance towards the pipe bundle
			drive(80, 85, 1000);
			
			//Lower arm to touch ground again
			motor[armMotor] = -50;
			delay(500);
			motor[armMotor] = 0;
			
			//Final advance to pick up pipe bundle
			drive(80, 85, 1500);
			

			delay(400);

			//Raise the arm to lift the pipe bundle
			motor[armMotor] = 70;
			delay(675);
			motor[armMotor] = 30;

			//Back it up till we are out of the area
			drive(-70, -70, 4000);

			armLocked = true;
		}

		if(vexRT[Btn5U])
			speedMod = 1;
		if(vexRT[Btn5D])
			speedMod = .75;

		if(vexRT[Btn8R])
			motor[magicServo] = -100;
		if(vexRT[Btn8L])
			motor[magicServo] = 50;


	}

}
